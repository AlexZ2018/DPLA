'''
set_dataProvider_list.py
'''
import sys
import dpla_utils
import getopt, dpla_config
import csv
import argparse

DATAPROVIDER_HEADER_NAME = 'dataProvider.name'
DATAPROVIDER_HEADER_COUNT = 'count_of_items'
PROVIDER_NAME = 'provider.name'
EXPECTED_INPUT_HEADER = [PROVIDER_NAME, DATAPROVIDER_HEADER_COUNT]
DPLA_DATAPROVIDER = 'dataProvider'
DATAPROVIDER_FILE_SUFFLIX = '_dataProvider.csv'
PROVIDER_HEADER_PROVIDER_NAME = 'provider.name' 
PROVIDER_HEADER_ITEMS_COUNT = 'count_of_items'
PROVIDER_HEADER_DATAPROVIDER_PATH = 'dataProvider_file_path'

def set_dataProvider_list():
        api_key = dpla_config.API_KEY

        # read input file and folder
        parser = argparse.ArgumentParser()
        parser.add_argument('-i', action='append', dest = 'provider_input_file', help = "A path of input provider file generated by set_provider_list.py is needed")
        parser.add_argument('-e', action = 'append', dest = 'dataProvider_folder', help = "A folder for storing dataProvider files is needed, the folder must exist")
        results = parser.parse_args()

        provider_input_file = results.provider_input_file[0]
        folder = results.dataProvider_folder[0]

        # append / into folder path
        if not folder.endswith("/"):
                folder = folder + "/"
        try:
                #open input file
                with open(provider_input_file) as input_file:

                        provider_csv_reader = csv.reader(input_file)

                        #check input header
                        input_header = next(provider_csv_reader, None)

                        if input_header != EXPECTED_INPUT_HEADER:
                                print("input header doesn`t match")
                                sys.exit()

                        dataProvider_count = 0
                        #print("************* Question 7: How many items are contributed by each dataProvider? **********")
                        for provider_information_row in provider_csv_reader:

                                #query dataProvider by faceting provider.name
                                current_provider_name = provider_information_row[0]
                                query_terms = {PROVIDER_NAME: current_provider_name}
                                query_terms['facets'] = DPLA_DATAPROVIDER
                                dataProvider_query_response = dpla_utils.dpla_fetch_facets_remote(api_key, **query_terms)

                                dataprovider_result_list = dataProvider_query_response['dataProvider']['terms']

                                new_dataProvider_result_list = []
                                for index in range(len(dataprovider_result_list)):
                                        current_dataProvider_result_list_entry = dataprovider_result_list[index]
                                        new_dataProvider_result_list_entry = {DATAPROVIDER_HEADER_NAME: current_dataProvider_result_list_entry['term'], DATAPROVIDER_HEADER_COUNT: current_dataProvider_result_list_entry['count']}
                                        new_dataProvider_result_list.append(new_dataProvider_result_list_entry)
                                # Question: How many items are contributed by each dataProvider?
                                #print("dataProvider ", dataprovider_result_list['term'], " contributes ", dataprovider_result_list['term'], " items.")
                                dataProvider_count += len(new_dataProvider_result_list)

                                try:
                                        # process current_provider_name
                                        current_provider_name = current_provider_name.replace(' ', '_', 256);
                                        # write dataProvider information into files
                                        #print(folder + current_provider_name + DATAPROVIDER_FILE_SUFFLIX)
                                        with open(folder + current_provider_name + DATAPROVIDER_FILE_SUFFLIX, 'w') as dataProvider_file:

                                                #header = ['term', 'count'] # put in begining
                                                header =  [DATAPROVIDER_HEADER_NAME, DATAPROVIDER_HEADER_COUNT]
                                                dataProvider_csv_writer = csv.DictWriter(dataProvider_file, header)
                                                dataProvider_csv_writer.writeheader()
                                                dataProvider_csv_writer.writerows(new_dataProvider_result_list)
                                                #header = [DATAPROVIDER_HEADER_COUNT, DATAPROVIDER_HEADER_NAME]
                                                #dataProvider_csv_writer.writeheader()

                                        dataProvider_file.close();

                                except IOError as folder_error:
                                        print("couldn`t create file in this folder")
                                        sys.exit()
                        print("There are " + str(dataProvider_count) + " dataProviders contribute data for DPLA")
                        input_file.close();
        except IOError as input_file_error:
                print("couldn`t read the input file ")

        #process provider list, add dataProvider_path column
        process_provider_list(provider_input_file, folder)

def process_provider_list(provider_file, dataProvider_folder):
        provider_rows = []

        #read provider_list and store it into a list, append dataProvider document path
        #print(provider_file)
        
        with open(provider_file, 'r') as provider_list_input:

                provider_reader = csv.reader(provider_list_input)

                reader_row = next(provider_reader, None)
                for provider_information in provider_reader:
                        #process provider_information[0]
                        #dataProvider_name:
                        provider_information[0] = provider_information[0].replace(' ', '_', 256)
                        
                        provider_information.append(dataProvider_folder + provider_information[0] + DATAPROVIDER_FILE_SUFFLIX)
                        provider_rows.append(provider_information)
        provider_list_input.close()

        #re-write the list into file, added dataProvider_file_path
        with open(provider_file, 'w', newline = '') as provider_list_output:
                provider_writer = csv.writer(provider_list_output, lineterminator='\n')
                
                provider_writer.writerow([PROVIDER_HEADER_PROVIDER_NAME, PROVIDER_HEADER_ITEMS_COUNT, PROVIDER_HEADER_DATAPROVIDER_PATH])
                provider_writer.writerows(provider_rows)
        

def main():
        set_dataProvider_list()

main()


